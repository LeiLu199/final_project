'''
This module contains the demonstration for our final project

main() will run through a full demonstration of strategy creation and evaluation.

Author: Peter Li

'''

import portfolioFactory.universe.universe as universe
import portfolioFactory.strategy.strategy as strategy
import portfolioFactory.reporting.reporting as reporting

from portfolioFactory.utils import getFileLocation

def main():
    
    '''Main is a demonstration that shows the functionality of portfolioFactory
    
    Example: strategy = main()    
    
    Input  
    --------
    Strategy Setup: 
    
    Main will prompt the user to select the location of the asset return file
    and the strategy config file. These are assumed to be generated by the user. 
    See README for file specifications.
            
    Plotting:
    
    Start Year (int): Start year for cumulative return plot
    End Year (int): End year for cumulative return plot
    Rolling Analysis Window (list of int): List of window sizes for rolling plots
    
    Output
    --------
    Plot showing cumulative returns for strategy and various risk/return metrics
    Plot showind rolling returns and histograms
    Strategy object
    
    '''
       
    # Select asset return data
    assetReturnsPath = getFileLocation.getFileLocation('Please select the Return File')
    demoUniverse = universe.universe('testUniverse', assetReturnsPath)
    
    # Select config fles
    configFilePath = getFileLocation.getFileLocation('Please select the Config File')
    demoStrategy = strategy.strategy(demoUniverse, configFilePath)
    
    # Get user input for plots
    startYear, endYear, windowInput = reporting.getUserPlottingParameters()
    
    # Plot
    reporting.plotRollingReturn(demoStrategy.strategyReturns, windowInput)
    reporting.plotWithStats(demoStrategy.strategyReturns, startYear, endYear)
    
    return demoStrategy    
        
if __name__ == "__main__":
    main()    
